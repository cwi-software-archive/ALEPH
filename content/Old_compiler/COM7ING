
          IDENT  COM7ING     ALEPH EXTERNAL RULE
          SST
          ENTRY  COM7ING
 COM7ING  JP     *+1S17 COMPARE STRING + T1[] + >P1 + T2[] + >P2 + TRIT>
* COMPARES THE STRINGS (T1,P1) AND (T2,P2)
* TRIT:= 'IF' (T1,P1) > (T2,P2) 'THEN' 1
*       'ELIF' (T2,P2) > (T1,P1) 'THEN' -1 'ELSE' 0 'FI'
          MUSTBE X1,X2,(COMPARE STRING, BAD FIRST STRING POINTER)
          SA4    X1          OFFSET S1
          BX6    X4          KEEP A COPY
          IX4    X2+X4       ADDRESS LAST WORD OF S1
          SA4    X4          LAST WORD
          MX5    -11
          BX5    -X5*X4      LENGTH OF S1 IN CHARACTERS
          SB4    X5          SAVE IT
          AX5    3           LENGTH OF S1 IN WORDS
          IX2    X2-X5       PNT TO FIRST WORD OF S1
          MUSTBE X1,X2,(COMPARE STRING, BAD FIRST STRING)
          IX2    X2+X6       ADDRESS OF FIRST WORD
          SA2    X2          AND LOAD IT
* NOW WE ARRANGE THE SAME FOR THE SECOND STRING:

          SA1    CA.ADDR     COMMUNICATION ADDRESS
          SA1    X1+CA.TEMP  POINTER TO LAST WORD OF S2
          SA5    =XTEMPIES                  $$$$$$$$$$$$$$$$$$$
          BX1    X1+X5       ONE OF THEM IS ZERO, WE THINK

          MUSTBE X3,X1,(COMPARE STRING, BAD SEC. STRING POINTER)
          SA4    X3          OFFSET OF S2
          BX6    X4          KEEP A COPY
          IX4    X1+X4       ADDRESS OF LAST WORD S2
          SA4    X4          LAST WORD
          MX5    -11
          BX5    -X5*X4      LENGTH OF S2 IN CHARACTERS
          SB5    X5          SAVE IT
          AX5    3                        IN WORDS
          IX1    X1-X5       PNT TO FIRST WORD OF S2
          MUSTBE X3,X1,(COMPARE STRING, BAD SEC. STRING)
          IX4    X1+X6       ADDRESS FIRST WORD OF S2
          SA4    X4          AND LOAD IT
* WE HAVE NOW INITIALIZED A2/X2 AND A4/X4
* THE NEXT SECTION CALCULATES THE LOOP PARAMETERS
          SX1    B4          LENGTH OF S1
          SX3    B5          LENGTH OF S2
          SX5    B4-B5       DIFFERENCE
          SB4    X5          WHICH SAVE
          AX5    60          PURE SIGN OF DIFFERENCE
          BX1    X5*X1       ZERO IF X1 >= X3
          BX3    -X5*X3      ZERO IF X1 < X3
          BX1    X1+X3       MINIMUM LENGTH
          AX1    3           IN WORDS
          SB5    X1          COUNTER
*
* LOOP ENVIRONMENT:
*   A2/X2 WORD IN FIRST STRING
*   A4/X4 WORD IN SECOND STRING
*   B5    NUMBER OF FULL WORDS TO BE COMPARED
*   B4    DIFFERENCE OF LENGTH, IN CHARACTERS
*
          ZR     B5,.LOOP7   PERHAPS NO WORD AT ALL
 LOOP7    LX2    -4          FIRST BIT
          LX4    -4                    IS NOT A SIGN BIT
          IX1    X2-X4       COMPARE
          NZ     X1,DIFF
          SA2    A2+B1       NEXT OF S1
          SA4    A4+B1       NEXT OF S2
          SB5    B5-B1       COUNT
          NZ     B5,LOOP7
 .LOOP7   BSS    0
*
* X2 AND X4 NOW CONTAIN THE LAST WORDS TO BE COMPARED. AT LEAST ONE OF
* THEM IS A GENUINE 'LAST WORD', SO ONLY THE FIRST 7 CHARACTERS CAN BE
* SIGNIFICANT. SOME OF THESE MAY NOT BE SIGNIFICANT, THEY WILL BE ZERO
* AND WILL COMPARE LOW, AS THEY SHOULD, UNLESS THE OTHER WORD CONTAINS
* ZERO-CHARACTERS IN THE CORRESPONDING PLACES. THE DECISION IS THEN
* MADE ON THE DIFFERENCE IN LENGTH, SAVED IN B4.
*
          MX5    -11         MASK FOR 7 CHARACTERS
          BX2    X5*X2
          BX4    X5*X4
          LX2    -4
          LX4    -4
          IX1    X2-X4       COMPARE
          NZ     X1,DIFF
          SX1    B4          IF NO DIFFERENCE FOUND, GET DIFFERENCE
          ZR     X1,COM7ING    OR NOT, IN WHICH CASE GOTO DIFF
 DIFF     AX1    60          ALL SIGN BITS
          MX2    -1          -1
          BX1    -X1-X2      INVERT IF +0
          EQ     COM7ING
          END
