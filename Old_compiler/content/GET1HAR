
          IDENT  GET1HAR
          SST
*GET1HAR  JP     *+1S17      + ""FILE + CHAR> - CNT - WORD:
*
* THIS ROUTINE WILL SUPPLY THE NEXT CHARACTER OR CONTROL INTEGER FROM
* 'FILE'. IT WILL TRANSLATE OR SUPPLY CONTROL INTEGERS, DEPENDING ON
* BITS IN 'FILETYPE' AND 'FILECH#'. THE ITEM CAN THEN BE PUSHED BACK
* BY ADDING 6 TO 'FILECH#'.
*
* 'PRED' GET CHAR + ""FILE + CHAR>:
* IS DUMMY + FILE;
* IS INPUT CHARFILE + FILE,
*  (= CNT =
*   [ 54 : 0 ], CHAR FROM WORD;
*   [ BL STAT ], 54 -> CNT, CHAR FROM WORD;
*   [ EOR STAT], - ;
*   [ CI STAT], 48 -> CNT, CHAR FROM WORD;
*   [ NCI STAT], 54 -> CNT, CHAR FROM WORD;
*   [ BL STAT + 6], 0 -> CHAR, BL STAT -> CNT;
*   [ EOR STAT + 6], EOR STAT -> CNT, -;
*   [ CI STAT + 6], YIELD CI;
*   [ NCI STAT + 6], CONSTRUCT CI;
*   [ NEW STAT], START NEW LINE;
*   [ -6], (GET WORD + WORD, 54 -> CNT, CHAR FROM WORD; YIELD EOR);
*   [ : ], BAD FET
*  );
*  ERROR.
*
* 'PRED' CHAR FROM WORD:
*   PICK CHAR + CHAR, MINUS + CNT + 6 + CNT,
*   ((CHAR = 0, LAST BITS ZERO), ZERO WORD TAIL; +).
*
* 'PRED' ZERO WORD TAIL:
*   $ CERTAIN EOL:$ MREQ + CNT + 0, START NEW LINE;
*   GET WORD + WORD,
*      (WORD = 0, START NEW LINE;
*       $ WRONG GUESS $ BL STAT -> CNT);
*   YIELD EOR.
*
* 'PRED' START NEW LINE:
*   GET WORD + WORD, (CI FILE, YIELD CI; CONSTRUCT CI);
*   YIELD EOR.
*
* 'PRED' YIELD EOR: EOR STAT -> CNT, -.
*
* 'ACTION' YIELD CI: CONVERT FIRST CHAR + CHAR, CI STAT -> CNT.
*
* 'ACTION' CONSTRUCT CI: NEWLINE -> CHAR, NCI STAT -> CNT.
*
* REGISTER ASSIGNMENT:
 FILE     =      1           X.FILE
 CHAR     =      2           X.CHAR
 CNT      =      3           X.CNT
 WORD     =      4           X.WORD
*
 YIELDEOR BSS    0           RECORD LEVEL IN B4
          SX5    EORSTAT
          PX.CNT X5,B4
          MX0    1
*         EQ     OUT

 OUT      BSS    0           X.CNT CONTAINS NEW FILECH#,
                             X.CHAR CONTAINS CHAR.
          BX6    X.CNT
          SA6    X.FILE+FILECH#
          BX1    X.CHAR
          SPACE  10,10
************************ PATCH FOR SYSTEM BUG:
 +        NZ,X1  *+1         TURN CHAR 00B
          SX1    1R          INTO SPACE
*************************** END OF PATCH
          SPACE  10,10
*         EQ     GET1HAR

 GET1HAR  JP     *+1S17      + ""FILE + CHAR> - CNT - WORD:
          ENTRY  GET1HAR
          SA5    X.FILE      FILE NAME
          MX0    1
          ZR,X5  GET1HAR     DUMMY, FAIL
          MX0    0
* IS INPUT CHARFILE:
          SA5    X.FILE+FILETYPE
          BX4    X5
          LX5    SIGNBIT-READBIT MUST BE NEGATIVE
          LX4    SIGNBIT-CHDATBIT MUST BE POSITIVE
          BX5    -X4*X5      MUST BE NEGATIVE
          PL,X5  BADFILE
* = CNT =
          SA.CNT X.FILE+FILECH#
          SX5    X.CNT-9*6-1
          PL,X5  BADFET
          PL,X.CNT FROMWORD  [ 54 : 0]
          SB5    X.CNT-LASTSTAT NOW B5 MUST BE >= 0,
          NG,B5  BADFET
          JP     B5+HERE     AND IS ENTRY IN A JUMP TABLE.
* BEGINNING OF JUMP TABLE
 HERE     BSS    0
          DUP    -LASTSTAT,1 PREFILL THE TABLE
 +        EQ     BADFET      WITH ERROR JUMPS.
 BASE     BSS    0           @ CORRESPONDING TO X.CNT = 0.

          ORG    BLSTAT+BASE
 +        SX.CNT 9*6
          EQ     FROMWORD
          ORG    HERE

          ORG    EORSTAT+BASE
 +        MX0    1
          EQ     OUT
          ORG    HERE

          ORG    CISTAT+BASE
 +        SX.CNT 8*6
          EQ     FROMWORD
          ORG    HERE

          ORG    NCISTAT+BASE
 +        SX.CNT 9*6
          EQ     FROMWORD
          ORG    HERE

          ORG    NEWSTAT+BASE
 +        EQ     STARTNL
          ORG    HERE

          ORG    BLSTAT+6+BASE PUSHED-BACK 00B IN POS. 5-0
 +        MX.CHAR 0          THE 00B READ
          EQ     BLREAD
          ORG    HERE

          ORG    EORSTAT+6+BASE PUSHED-BACK END-OF-RECORD
 +        UX5,B4 X.CNT       GET OLD RECORD LEVEL
          EQ     YIELDEOR
          ORG    HERE

          ORG    CISTAT+6+BASE PUSHED-BACK CONTROL INT.
 +        SA.WORD X.FILE+FILEWORD
          EQ     YIELDCI
          ORG    HERE

          ORG    NCISTAT+6+BASE PUSHED-BACK INSERTED CONTROL INT.
 +        EQ     CONSTRCI
          ORG    HERE

          ORG    -6+BASE     LAST CHAR IN WORD USED UP.
 +        EQ     NEWWORD
          ORG    HERE

          ORG    BASE
* END OF JUMP TABLE

 FROMWORD BSS    0           X.CNT CONTAINS PROPER VALUE
          SA.WORD X.FILE+FILEWORD
*PICKCHAR BSS    0
          SB5    X.CNT       FOR SHIFT
          MX5    -6
          AX.CHAR X.WORD,B5  SHIFT
          BX.CHAR -X5*X.CHAR MASK
*ENDPICKCHAR
          SX.CNT X.CNT-6     MINUS + CNT + 6 + CNT,
          NZ,X.CHAR OUT      (CHAR = 0,
          SB5    X.CNT-59+6
          MX5    1
          AX5    -B5
          BX5    -X5*X.WORD  LAST BITS
          NZ,X5  OUT                   ZERO),
* ZERO WORD TAIL:
          PL,X.CNT STARTNL   MREQ + CNT + 0, START NEW LINE;
          RJ     GETW        (GET WORD + WORD; YIELD EOR),
          NZ,X.WORD BLREAD
*         EQ     STARTNL     WORD = 0, START NEW LINE

 STARTNL  BSS    0           ONLY X.FILE REQUIRED
          RJ     GETW        (GET WORD + WORD; YIELD EOR),
          SA5    X.FILE+FILETYPE
          LX5    SIGNBIT-CIBIT SHIFT BIT TO SIGN-BIT
          PL,X5  CONSTRCI

 YIELDCI  BSS    0           X.WORD CONTAINS WORD
          MX5    6
          BX.CHAR X5*X.WORD  FIRST CHAR
          LX.CHAR 6
          BX.CHAR -X.CHAR    CONVERT, CANNOT BE ZERO
          SX.CNT CISTAT
          EQ     OUT

 BLREAD   SX.CNT BLSTAT
          EQ     OUT

 CONSTRCI SX.CHAR NEWLINE
          SX.CNT NCISTAT
          EQ     OUT

 NEWWORD  BSS    0           ONLY X.FILE REQUIRED
          RJ     GETW        (GET WORD + WORD; YIELD EOR),
          SX.CNT 9*6
          EQ     FROMWORD

*
 GETW     JP     *+1S17      GETS NEXT WORD
          DOWNCPU
          BX=    1,FILE
          RJ     =XGETWORD   + ""FILE + WORD> + TYPE> (LEVEL + 1)
          BX=    FILE,1
          BX6    X2
          SA6    X.FILE+FILEWORD
          BX.WORD X6
          UPCPU
          SB4    X3-1        LEVEL NUMBER
          PL,B4  YIELDEOR
          EQ     GETW

 BADFILE  ERREXT (GET CHAR, BAD FILE),F.FILE
          END
