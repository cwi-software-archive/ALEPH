
          IDENT  PAC4ING     ALEPH EXTERNAL RULE
          SST
          ENTRY  PAC4ING
 PAC4ING  JP     *+1S17      PACK STRING + FROM[] + >N + []TO[]:
* PACKS THE RIGHT-MOST 'N' CHARACTERS IN 'FROM' INTO A STRING AND
* STACKS IT ON 'TO'
          BX0    X2          LENGTH
          AX0    11                 '/' 2048
          CX0    X0          MUST BE ALL ZERO
          NZ,X0  BADLN
          SX6    X1          *
          SA6    =XALF.SC1   *
          BX6    X2          * STORE ALL
          SA6    A6+B1       *           PARAMETERS
          SX6    X3          *
          SA6    A6+B1       *
* TEST IF 'FROM' IS BIG ENOUGH
          SA4    X1+<<PRE    X4:= MIN - 1
          SA5    A4-B1       X5:= MAX
          BX6    X5          STORE MAX IN CASE FROM=TO EXTEND SPOILS MAX
          SA6    A6+B1
          IX5    X5-X2       MAX - N
          IX5    X5-X4               - MIN + 1
          NG     X5,BADLN    MUST BE >= 0
* CALL 'EXTEND' TO EXTEND 'TO'
          SX1    X3          FIRST PARAMETER
          AX2    3           N '/' 8
          SX2    X2+B1               + 1 IS LENGTH NEEDED
          EXTEND12
* RESTORE PARAMETERS
          SA1    =XALF.SC1
          SA2    A1+B1
          SA3    A2+B1
* INITIALIZE READING FROM 'FROM'
          SA5    A3+B1       RESTORE PNT TO TOP OF 'FROM'
          SA4    X1          OFFSET
          SB4    X2          COUNT TOTAL
          IX1    X5+X4       ADDRESS TOP OF 'FROM'
          IX1    X1-X2       ADDRESS OF FIRST WORD - 1
          SA1    X1          STORE IT IN A1
* INITIALIZE WRITING TO 'TO'
          SA4    X3          OFFSET
          SA5    A4-B3       PNT TO TOP OF 'TO'
          AX2    3           LENGTH OF
          SX2    X2+B1         NEW AREA IN 'TO'
          IX3    X5+X4       ADDRESS TOP OF 'TO'
          IX3    X3-X2       ADDRESS FIRST WORD IN 'TO' - 1
          SA5    X3          STORE
          BX6    X5                IT
          SA6    A5                   IN A6
*
* WE HAVE NOW SET UP THE FOLLOWING LOOP ENVIRONMENT:
*  A1/X1  READING REGISTER
*  X2     LENGTH (TO BE STORED IN LAST WORD)
*  A6/X6  LAST WRITTEN ADDRESS / WORD UNDER CONSTRUCTION
*  B4     COUNT TOTAL  [ N : 0 ]
*  B5     COUNT SHIFT  [ 8 : 0 ]
*
 STLOOP   MX6    0           CLEAR WORD
          SB5    8           AND NOTE THAT.
 PKLOOP   ZR     B4,B4ZERO   NO MORE CHARACTERS
          SA1    A1+B1       GET NEXT CHARACTER
          LX6    7           MAKE ROOM FOR IT
          SB4    B4-B1       COUNT
          SB5    B5-B1             IT
          BX6    X6+X1       ADD IT
          MX0    -7
          BX0    X0*X1       REMOVE 7 BITS
          NZ     X0,BADCHAR  AND NOW IT MUST BE ZERO
          NZ     B5,PKLOOP   WORD NOT YET FINISHED
          LX6    4           POSITION FINISHED WORD
          SA6    A6+B1       WRITE IT
          EQ     STLOOP      AND START OVER AGAIN
 B4ZERO   BSS    0
*
* THE ENVIRONMENT IS NOW:
*
*  X2     LENGTH
*  A6/X6  LAST WRITTEN ADDRESS / WORD UNDER CONSTRUCTION
*  B4     0
*  B5     COUNT SHIFT [ 8 : 1 ]
*
          SA2    A2          RESTORE LENGTH
          SX4    B5          SHIFT COUNT
          LX5    X4,B3       8 * B5
          IX4    X5-X4       7 * B5
          SB5    X4
          LX6    B5          SHIFT OVER
          LX6    4           7 * B5 + 4
          BX6    X6+X2       INSERT LENGTH
          SA6    A6+B1       WRITE IT
          EQ     PAC4ING

 BADLN    ERREXT (PACK STRING, BAD LENGTH),(L1,D2)
 BADCHAR  SA2    =XALF.SC1   ADDRESS OF 'FROM'
          SA3    A2+2        ADDRESS OF 'TO'
          ERREXT (PACK STRING, BAD CHAR),(L2,L3,C1)
          END
